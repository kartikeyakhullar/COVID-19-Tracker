{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","props","console","log","data","confirmed","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","lastUpdate","toDateString","recovered","deaths","url","fetchData","country","a","changableURL","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","i","key","App","state","fetchedData","setState","this","image","src","corona","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e9fa74b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card,CardContent,Typography,Grid } from \"@material-ui/core\"\nimport  styles  from \"./Cards.module.css\"\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\"\n\n\n\n\nconst Cards = (props)=>{\n\n    console.log(props);\n\n\n    if(!props.data.confirmed){\n        return (\n            <div>Loading...</div>\n        )\n    }\n\n    \n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={props.data.confirmed.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(props.data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">No of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={props.data.recovered.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(props.data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">No of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={props.data.deaths.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(props.data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">No of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>    \n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async(country)=>{\n    let changableURL = url;\n\n    if(country){\n        changableURL = `${url}/countries/${country}`\n    }\n\n\n\n    try{\n        const {data} = await axios.get(changableURL);\n        const modifiedData = {\n            confirmed : data.confirmed,\n            recovered : data.recovered,\n            deaths : data.deaths,\n            lastUpdate : data.lastUpdate\n        }\n        return modifiedData;\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async()=>{\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData)=>({\n            confirmed : dailyData.confirmed.total,\n            deaths : dailyData.deaths.total,\n            date : dailyData.reportDate\n        }));\n        \n        return modifiedData;\n\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async()=>{\n    try{\n        const {data : {countries}} = await axios.get(`${url}/countries`);\n\n        return countries.map((country)=>country.name);\n\n    }catch(error){\n        console.log(error);\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n","import React,{useState,useEffect} from \"react\";\nimport {fetchDailyData} from \"../../api/index\"\nimport { Line,Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = (props)=>{\n\n    const {country,data} = props;\n\n    const [dailyData,setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async ()=>{\n            const dailyData = await fetchDailyData();\n            setDailyData(dailyData);\n        }\n        fetchAPI();\n\n    },[]);\n\n    const lineChart = (\n        dailyData.length !==0 ? (\n        <Line \n            data = {{\n                labels : dailyData.map(({date})=>date),\n                datasets : [{\n                    data : dailyData.map(({confirmed})=>confirmed),\n                    label : 'Infected',\n                    borderColor : '#3333ff',\n                    fill : true\n\n                },{\n                    data : dailyData.map(({deaths})=>deaths),\n                    label : 'Deaths',\n                    borderColor : 'red',\n                    backgroundColor : 'rgba(255,0,0,0.5)',\n                    fill : true\n\n                }]\n            }}\n        />) : null\n    );\n\n\n    const barChart = (\n        data.confirmed ?\n        (\n            <Bar \n                data = {{\n                    labels : ['Infected', 'Recovered', 'Deaths'],\n                    datasets : [{\n                        label : 'People',\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                        data : [data.confirmed.value, data.recovered.value, data.deaths.value]\n                    }]\n                }}\n                options = {{\n                    legend : {display : false},\n                    title : {display : true, text : `Current state in ${country}`},\n\n\n                }}\n            />\n        ) : null\n    )\n\n\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React,{useState,useEffect} from \"react\";\nimport { NativeSelect,FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport {fetchCountries} from \"../../api/index\"\n\nconst CountryPicker = (props)=>{\n\n\n    const [fetchedCountries,setFetchedCountries] = useState([])\n\n    useEffect(()=>{\n        const fetchAPI = async()=>{\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    },[setFetchedCountries]);\n\n    return (\n        <FormControl className = {styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>props.handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i)=>{\n                    return (\n                        <option key={i} value={country}>{country}</option>\n                    );\n                })}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React, {Component} from \"react\";\n\n// Components\n\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\n\n\nimport styles from \"./App.module.css\"\n\nimport {fetchData} from \"./api/index\"\n\nimport corona from \"./images/image.png\"\n\n\nclass App extends Component {\n\n    state = {\n        data : {},\n        country : ''\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        this.setState ({data : fetchedData})\n    }\n\n    handleCountryChange = async (country)=>{\n        const fetchedData = await fetchData(country);\n        this.setState({data : fetchedData, country : country});\n    }\n\n\n    render(){\n        const {data,country} = this.state;\n        return (\n            <div className={styles.container}> \n                <img className={styles.image} src={corona} alt=\"COVID-19\"/>\n                <Cards data = {data}/>\n                <CountryPicker handleCountryChange = {this.handleCountryChange} />\n                <Chart data = {data} country = {country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}